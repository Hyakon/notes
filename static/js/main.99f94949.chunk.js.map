{"version":3,"sources":["components/Button/index.jsx","components/Preview/index.jsx","components/Menu/index.jsx","components/Rendered/index.jsx","components/Form/index.jsx","App.js","index.js"],"names":["Button","props","handle","handleArgs","text","className","args","console","log","onClick","Preview","note","title","content","split","slice","join","Menu","notes","handleNew","map","id","Rendered","html","__html","showdown","Converter","makeHtml","dangerouslySetInnerHTML","Form","handleTitle","handleContent","onSubmit","onChange","type","name","value","cols","rows","App","React","useState","JSON","parse","localStorage","getItem","myNotes","setMyNotes","uuidv4","currentNote","setCurrentNote","formTitle","setFormTitle","formContent","setFormContent","useEffect","length","save","stringify","setItem","e","preventDefault","isReplaced","some","tmp","target","elements","newNote","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99f94949.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./index.css\";\n\nconst Button = (props) => {\n  const {\n    handle = \"\",\n    handleArgs = () => 0,\n    text,\n    className = \"\",\n    args = \"\",\n  } = props;\n  console.log(text, handleArgs);\n  return (\n    <button\n      className={className}\n      onClick={handle ? handle : () => handleArgs(args)}\n    >\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","/* eslint-disable react/prop-types */\nimport React from \"react\";\nimport Button from \"../Button\";\nimport \"./index.css\";\n\nconst Preview = ({ note, handle }) => {\n  const text = (\n    <>\n      <h2>{note.title}</h2>\n      <p>{note.content.split(\" \").slice(0, 15).join(\" \")}</p>\n    </>\n  );\n  return (\n    <li>\n      <Button\n        className=\"link-button\"\n        handle={() => {\n          handle(note);\n        }}\n        text={text}\n        args={note}\n      />\n    </li>\n  );\n};\n\nexport default Preview;\n","import React from \"react\";\nimport Button from \"../Button\";\nimport Preview from \"../Preview\";\nimport \"./index.css\";\n\nconst Menu = ({ notes, handle, handleNew }) => {\n  return (\n    <aside>\n      <Button handle={handleNew} text=\"Ajouter une Note\" />\n      <ul>\n        {notes.map((note) => (\n          <Preview key={note.id} note={note} handle={handle} />\n        ))}\n      </ul>\n    </aside>\n  );\n};\n\nexport default Menu;\n","import React from \"react\";\nimport \"./index.css\";\n\nimport showdown from \"showdown\";\n\nconst Rendered = ({ title, content }) => {\n  const converter = new showdown.Converter();\n  const html = { __html: converter.makeHtml(content) };\n  return (\n    <article>\n      <h2>{title}</h2>\n      <div dangerouslySetInnerHTML={html}></div>\n    </article>\n  );\n};\n\nexport default Rendered;\n","import React from \"react\";\nimport Button from \"../Button\";\nimport \"./index.css\";\n\nconst Form = ({ handle, title, content, handleTitle, handleContent }) => {\n  return (\n    <form onSubmit={handle}>\n      <input\n        onChange={handleTitle}\n        type=\"text\"\n        name=\"title\"\n        id=\"\"\n        value={title}\n      />{\" \"}\n      <br />\n      <textarea\n        onChange={handleContent}\n        name=\"content\"\n        id=\"\"\n        cols=\"30\"\n        rows=\"10\"\n        value={content}\n      ></textarea>{\" \"}\n      <br />\n      <Button text=\"Sauvegarder\" />\n    </form>\n  );\n};\n\nexport default Form;\n","import \"./App.css\";\n\nimport React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Menu from \"./components/Menu\";\nimport Rendered from \"./components/Rendered\";\nimport Form from \"./components/Form\";\n\nconst App = (props) => {\n  const [myNotes, setMyNotes] = React.useState(\n    () => JSON.parse(localStorage.getItem(\"myNotes\")) || []\n  );\n  const [currentNote, setCurrentNote] = React.useState({\n    id: uuidv4(),\n    title: \"\",\n    content: \"\",\n  });\n\n  const [formTitle, setFormTitle] = React.useState(\"\");\n  const [formContent, setFormContent] = React.useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const isReplaced =\n      currentNote && myNotes.some((note) => note.id === currentNote.id);\n\n    console.log(myNotes);\n    if (!isReplaced) {\n      const newNote = {\n        id: uuidv4(),\n        title: e.target.elements.title.value,\n        content: e.target.elements.content.value,\n      };\n      console.log(\"submit\", newNote);\n      // Meileur Facon\n      setMyNotes((prevState) => [...prevState, newNote]);\n      // setMyNotes(myNotes.concat(newNote));\n    } else {\n      const tmp = myNotes.map((note) => {\n        if (note.id === currentNote.id) {\n          const newNote = {\n            id: note.id,\n            title: e.target.elements.title.value,\n            content: e.target.elements.content.value,\n          };\n          return newNote;\n        }\n        return note;\n      });\n      setMyNotes(tmp);\n    }\n  };\n\n  const handleTitleChange = (e) => {\n    setFormTitle(e.target.value);\n  };\n  const handleContentChange = (e) => {\n    setFormContent(e.target.value);\n  };\n  const handleSelectNote = (note) => {\n    // myNotes.findIndex id\n    setCurrentNote(note);\n    console.log(\"noteClick\");\n  };\n\n  const handleNewNote = () => {\n    setCurrentNote({\n      id: uuidv4(),\n      title: \"\",\n      content: \"\",\n    });\n    setFormContent(\"\");\n    setFormTitle(\"\");\n  };\n\n  React.useEffect(() => {\n    console.log(currentNote);\n    if (currentNote) {\n      setFormTitle(currentNote.title);\n      setFormContent(currentNote.content);\n    }\n  }, [currentNote]);\n\n  React.useEffect(() => {\n    console.log(myNotes);\n    console.log(\"before\", localStorage.length);\n    const save = JSON.stringify(myNotes);\n    localStorage.setItem(\"myNotes\", save);\n  }, [myNotes]);\n\n  return (\n    <div className=\"container\">\n      <Menu\n        // Use onNew onSelect on.. instead of Handle\n        handleNew={handleNewNote}\n        notes={myNotes}\n        handle={handleSelectNote}\n      />\n      <main>\n        <Rendered title={formTitle} content={formContent} />\n        <Form\n          // onSubmit\n          handle={handleSubmit}\n          title={formTitle}\n          content={formContent}\n          handleTitle={handleTitleChange}\n          handleContent={handleContentChange}\n        />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}